<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Owasp on Musings from Etienne</title><link>https://etiennemunnich.github.io/tags/owasp/</link><description>Recent content in Owasp on Musings from Etienne</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 23 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://etiennemunnich.github.io/tags/owasp/index.xml" rel="self" type="application/rss+xml"/><item><title>Building with Coding AI Tools</title><link>https://etiennemunnich.github.io/posts/building-with-coding-ai-tools/</link><pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate><guid>https://etiennemunnich.github.io/posts/building-with-coding-ai-tools/</guid><description>&lt;h1 id="integrating-perplexity-ai-in-a-python-app">Integrating Perplexity AI in a Python App:&lt;/h1>
&lt;p>&lt;em>Because Why Not Let Robots Write Your Blog?&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>A technical deep-dive into integrating Perplexity AI&amp;rsquo;s language models, or, &amp;ldquo;How I taught my computer to argue with itself.&amp;rdquo;&lt;/p>&lt;/blockquote>
&lt;p>So, you want to make your Python app talk to Perplexity AI? Great! Because nothing says &amp;ldquo;cutting-edge&amp;rdquo; like outsourcing your brainpower to a server farm. In this article, I&amp;rsquo;ll dive into an example built with Amazon Q Developer, Perplexity and a few other tools. Maybe, just maybe, figure out if this is a good idea.&lt;/p></description></item></channel></rss>